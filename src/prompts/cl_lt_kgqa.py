reasoning_prompt = {
   "system": "Given a question and the associated retrieved reasoning path from a knowledge graph, you are asked to verifiy the correctiness of the following question based on the reasoning path and your knowledge. Only return the True or False to the question.",
   "examples": [
      {"role": "user", "content": "Question: what art movements was henri matisse involved in? \nReasoning path: Henri Matisse->visual_art.visual_artist.associated_periods_or_movements->Neo-impressionism"}, 
      {"role": "assistant", "content": "Answer: Neo-impressionism"},
      {"role": "user", "content": "Question: what team did tim tebow play for in college\n Reasoning path: Tim Tebow->sports.sports_team_roster.player->m.0hpc6gc->sports.sports_team_roster.team->Florida Gators football"},
      {"role": "assistant", "content": "Answer: Florida Gators football"},
      {"role": "user", "content": "Question: who won 2012 presidential election in france?\nReasoning path: French presidential election, 2012->government.election.winner->Fran\u00e7ois Hollande"},
      {"role": "assistant", "content": "Answer: Fran\u00e7ois Hollande"},
      {"role": "user", "content": "Question: what is the name of the person who wrote the book that was made into the movie that won the Academy Award for Best Picture in 2014?\nReasoning path: Academy Award for Best Picture, 2014->film.film.film_award_wins->12 Years a Slave->film.film.written_by->John Ridley"},
      {"role": "assistant", "content": "Answer: John Ridley"},
      {"role": "user", "content": "Question: where does selena gomez live right now 2010?\nReasoning Path: Selena Gomez->people.person.places_lived->m.04hmnxs->people.place_lived.location->New York City"},
      {"role": "assistant", "content": "Answer: New York City"}
   ],
   "prompt": "Given a question and the associated retrieved reasoning path from a knowledge graph, you are asked to answer the following question based on the reasoning path and your knowledge. \nQuestion: {question} \nReasoning path: {reasoning_path} \nOnly return the answer to the question."
}

beam_search_prompt = {
   "system": "Given a question and the starting entity from a knowledge graph, you are asked to retrieve reasoning paths from the given reasoning paths that are useful for answering the question.",
   "examples": [
      {"role": "user", "content": "Question: what art movements was henri matisse involved in?\n To proceed, the starting entity is Henri Matisse\n Out of the following candidates for the next step, choose the best 5 with the highest probability to lead to a useful reasoning path for answering the question. \nCandidates: 1: book.written_work.subjects\n2: exhibitions.exhibition_subject.exhibitions_created_about_this_subject\n3: influence.influence_node.peers\n4: visual_art.artwork.artist\n5: book.author.works_written\n6: influence.influence_node.influenced\n7: visual_art.art_series.artist\n8: book.book_subject.works\n9: influence.influence_node.influenced_by\n10: people.person.profession\n11: common.topic.article\n12: influence.influence_node.influenced\n13: common.topic.notable_for\n14: education.education.student\n15: influence.influence_node.influenced_by\n16: influence.influence_node.influenced\n17: influence.influence_node.influenced_by\n18: common.topic.notable_types\n19: influence.influence_node.influenced\n20: influence.influence_node.influenced_by\n21: base.patronage.patron_client_relationship.client\n22: influence.influence_node.influenced\n23: visual_art.artwork.artist\n24: education.education.student\n25: book.written_work.author\n26: visual_art.artwork.artist\n27: exhibitions.exhibition.subjects\n28: visual_art.artwork.artist\n29: book.written_work.author\n30: visual_art.visual_artist.art_forms\n31: book.book_subject.works\n32: visual_art.artwork.artist\n33: people.person.nationality\n34: visual_art.visual_art_form.artists\n35: influence.influence_node.influenced_by\n36: visual_art.artwork.artist\n37: people.person.parents\n38: visual_art.artwork.artist\n39: influence.influence_node.influenced_by\n40: visual_art.art_period_movement.associated_artists\n41: influence.influence_node.influenced_by\n42: people.person.parents\n43: base.patronage.patron_client_relationship.client\n44: exhibitions.exhibition_subject.exhibitions_created_about_this_subject\n45: exhibitions.exhibition.subjects\n46: visual_art.visual_artist.art_series\n47: visual_art.artwork.artist\n48: visual_art.visual_artist.associated_periods_or_movements\n49: influence.peer_relationship.peers\n50: exhibitions.exhibition.subjects\n51: visual_art.artwork.artist\n52: influence.influence_node.influenced\n53: influence.influence_node.influenced_by\n54: influence.influence_node.influenced\n55: influence.influence_node.influenced_by\n56: influence.influence_node.influenced_by\n57: visual_art.artwork.artist\n58: exhibitions.exhibition_subject.exhibitions_created_about_this_subject\n59: book.written_work.subjects\n60: influence.influence_node.influenced\n61: people.person.parents\n62: influence.influence_node.influenced_by\n63: influence.influence_node.peers\n64: exhibitions.exhibition.subjects\n65: base.patronage.patron_client_relationship.client\n66: film.personal_film_appearance.person\n67: influence.influence_node.influenced_by\n68: common.webpage.topic\n69: exhibitions.exhibition.subjects\n70: influence.influence_node.influenced_by\n71: common.image.appears_in_topic_gallery\n72: people.person.place_of_birth\n73: book.written_work.author\n74: film.film_character.portrayed_in_films\n75: influence.influence_node.influenced\n76: influence.influence_node.peers\n77: people.person.parents\n78: base.patronage.client.related_patron\n79: influence.influence_node.influenced\n80: influence.influence_node.influenced_by\n81: influence.influence_node.influenced_by\n82: book.written_work.subjects\n83: influence.influence_node.peers\n84: influence.influence_node.influenced\n85: symbols.namesake.named_after\n86: influence.influence_node.influenced_by\n87: visual_art.artwork.artist\n88: common.image.size\n89: freebase.valuenotation.is_reviewed\n90: visual_art.artwork.artist\n91: book.author.works_written\n92: symbols.name_source.namesakes\n93: visual_art.visual_artist.associated_periods_or_movements\n94: visual_art.artwork.artist\n95: people.person.spouse_s\n96: influence.influence_node.influenced_by\n97: freebase.valuenotation.is_reviewed\n98: visual_art.visual_artist.art_series\n99: people.deceased_person.cause_of_death\n100: freebase.valuenotation.is_reviewed\n101: influence.influence_node.influenced\n102: influence.influence_node.influenced_by\n103: book.written_work.author\n104: influence.influence_node.influenced\n105: influence.influence_node.influenced\n106: people.person.parents\n107: visual_art.artwork.artist\n108: visual_art.artwork.artist\n109: visual_art.artwork.artist\n110: visual_art.artwork.artist\n111: exhibitions.exhibition.subjects\n112: visual_art.artwork.artist\n113: freebase.valuenotation.is_reviewed\n114: people.deceased_person.place_of_death\n115: people.person.profession\n116: people.place_lived.person\n117: common.topic.notable_for\n118: exhibitions.exhibition_subject.exhibitions_created_about_this_subject\n119: freebase.valuenotation.is_reviewed\n120: influence.influence_node.influenced_by\n121: visual_art.visual_artist.associated_periods_or_movements\n122: visual_art.artwork.artist\n123: visual_art.artwork.artist\n124: people.person.gender\n125: influence.influence_node.influenced\n126: influence.influence_node.influenced_by\n127: visual_art.artwork.artist\n128: visual_art.artwork.artist\n129: visual_art.artwork.artist\n130: influence.influence_node.influenced\n131: visual_art.artwork.artist\n132: visual_art.artwork.artist\n133: freebase.valuenotation.is_reviewed\n134: visual_art.artwork.artist\n135: symbols.namesake.named_after\n136: visual_art.visual_artist.art_forms\n137: freebase.valuenotation.is_reviewed\n138: people.person.ethnicity\n139: freebase.valuenotation.is_reviewed\n140: freebase.valuenotation.is_reviewed\n141: visual_art.visual_artist.associated_periods_or_movements\n142: visual_art.visual_artist.art_forms\n143: freebase.valuenotation.has_value\n144: exhibitions.exhibition.subjects\n145: visual_art.artwork.artist\n146: visual_art.visual_artist.art_forms\n147: visual_art.artwork.artist\n148: visual_art.artwork.artist\n149: visual_art.artwork.artist Only return the index of the 3 selected reasoning path in a list."},
      {"role": "assistant", "content": "Answer: [40, 48, 93, 121, 141]"},
   ],
   # "examples": [],
   "prompt": "Considering the planning context {plan_context} and the given question {question}, \nyou are asked to choose the best {beam_width} reasoning paths from the following candidates with the highest probability to lead to a useful reasoning path for answering the question. {reasoning_paths}. \n\nOnly return the index of the {beam_width} selected reasoning paths in a list."
}

# planning + keywords detection
plan_prompt = {
   "system": "You are a helpful assistant designed to output JSON that aids in navigating a knowledge graph to answer a provided question. The response should include the following keys: (1) 'keywords': an exhaustive list of keywords or relation names that you would use to find the reasoning path from the knowledge graph to answer the question. Aim for maximum coverage to ensure no potential reasoning paths will be overlooked; (2) 'planning_steps': a list of detailed steps required to trace the reasoning path with. Each step should be a string instead of a dict. (3) 'declarative_statement': a string of declarative statement that can be transformed from the given query, For example, convert the question 'What do Jamaican people speak?' into the statement 'Jamaican people speak *placeholder*.' leave the *placeholder* unchanged; Ensure the JSON object clearly separates these components.",
   "examples": [],
   "prompt": "{question}?"
}

reasoning_path_parser_prompt = {
   "system": "You are asked to transfer the reasoning path to a statment, for example, convet the reasoning path 'Henri Matisse->book.written_work.subjects->Matisse, Picasso' to 'Henri Matisse wrote a book about Matisse and Picasso'.",
   "examples": [],
   "prompt": "{reasoning_path}",
}

terminals_prune_single_prompt = {
   "system": "Given a question and the starting entity from a knowledge graph, you are asked to answer whether it's sufficient for you to answer the question with the following reasoning path. For each reasoning path, respond with 'Yes' if it is sufficient, and 'No' if it is not. Your response should be either 'Yes' or 'No', corresponding to reasoning path.",
   "examples": [
      {"role": "user", "content": "Question: what art movements was henri matisse involved in?\n Reasoning path: \nHenri Matisse->book.written_work.subjects->Matisse, Picasso"},
      {"role": "assistant", "content": "Answer: No"},
      {"role": "user", "content": "Question: what team did tim tebow play for in college?\nReasoning path: \nTim Tebow->people.sibling_relationship.sibling->m.05v4ns_"},
      {"role": "assistant", "content": "Answer: No"},
      {"role": "user", "content": "Question: where does selena gomez live right now 2010?\nReasoning Path: \nSelena Gomez->people.person.places_lived->m.04hmnxs->people.place_lived.location->New York City"},
      {"role": "assistant", "content": "Answer: Yes"},
   ],
   "examples": [],
   "prompt": "Considering the planning context {plan_context} and the given question {question}, you are asked to answer whether it's sufficient for you to answer the question with the following reasoning path. {reasoning_path}. Verify if it is sufficient to answer the question with each of the provided reasoning path. Your response should either 'Yes' or 'No', corresponding to reasoning path. \nAnswer:"
}

deductive_verifier_prompt = {
   "system": "You are asked to verify whether the reasoning step follows deductively from the question and the current reasoning path in a deductive manner. If yes return yes, if no, return no",
   "examples": [],
   "prompt": "Whether the conclusion \'{declarative_statement}\' can be deduced from \'{parsed_reasoning_path}\', if yes, return yes, if no, return no."
}